{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoList","todos","selectTodo","selectedId","className","map","todo","id","completed","title","type","onClick","TodoFilter","onFilter","useState","query","setQuery","debouncedQuery","setDebouncedQuery","All","currentFilter","setCurrentFilter","filterByStatus","useCallback","Active","filter","Completed","clearButton","visibleTodos","useMemo","toLowerCase","includes","useEffect","debounceQueryHandler","debounce","onChange","event","target","value","placeholder","length","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","loadingState","selectedTodo","onClose","currentUser","setCurrentUser","waitForUsers","a","userId","user","href","email","name","App","setTodos","filtredByReady","setFiltredByReady","hasLoading","setHasIsLoading","selectedTodoId","setSelectedTodoId","find","fetchTodos","todosFromServer","todoId","todosToFilter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7c59e405.chunk.js","sourcesContent":["export enum Filter {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport className from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectTodo: (selectedTodoId: number) => void;\n  selectedId: number;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectTodo,\n  selectedId,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => (\n        <tr\n          data-cy=\"todo\"\n          className=\"\"\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered is-expanded\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={className({\n                'has-text-success': todo.completed,\n                'has-text-danger': !todo.completed,\n              })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => selectTodo(todo.id)}\n            >\n              <span className=\"icon\">\n                <i className={className('far', {\n                  'fa-eye': selectedId !== todo.id,\n                  'fa-eye-slash': selectedId === todo.id,\n                })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { debounce } from 'lodash';\nimport { Filter } from '../../types/Filter';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  onFilter: (FilteredTodos: Todo[]) => void;\n  todos: Todo[];\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  onFilter,\n  todos,\n}) => {\n  const [query, setQuery] = useState('');\n  const [debouncedQuery, setDebouncedQuery] = useState('');\n  const [currentFilter, setCurrentFilter] = useState(Filter.All);\n\n  const filterByStatus = useCallback(\n    () => {\n      switch (currentFilter) {\n        case Filter.Active:\n          return todos.filter(todo => !todo.completed);\n        case Filter.Completed:\n          return todos.filter(todo => todo.completed);\n        default:\n          return todos;\n      }\n    }, [currentFilter, query],\n  );\n\n  const clearButton = useCallback(() => {\n    setDebouncedQuery('');\n    setQuery('');\n  }, []);\n\n  const visibleTodos = useMemo(() => {\n    return filterByStatus().filter(\n      todo => todo.title.toLowerCase().includes(debouncedQuery.toLowerCase()),\n    );\n  }, [debouncedQuery, currentFilter]);\n\n  useEffect(() => {\n    onFilter(visibleTodos);\n  }, [debouncedQuery, currentFilter]);\n\n  const debounceQueryHandler = useCallback(\n    debounce(setDebouncedQuery, 500),\n    [],\n  );\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => (\n              setCurrentFilter(event.target.value as Filter)\n            )}\n          >\n            <option value={Filter.All}>All</option>\n            <option value={Filter.Active}>Active</option>\n            <option value={Filter.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => {\n            setQuery(event.target.value);\n            debounceQueryHandler(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {query.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clearButton}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(0)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  loadingState: boolean;\n  selectedTodo: Todo;\n  onClose: (todoId: number) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  loadingState,\n  selectedTodo,\n  onClose,\n}) => {\n  const [currentUser, setCurrentUser] = useState<User>();\n\n  const waitForUsers = async () => {\n    await getUser(selectedTodo.userId)\n      .then((user) => {\n        setCurrentUser(user);\n      });\n  };\n\n  useEffect(() => {\n    waitForUsers();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {(loadingState || !currentUser) ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onClose(0)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong\n                className={\n                  selectedTodo.completed\n                    ? 'has-text-success'\n                    : 'has-text-danger'\n                }\n              >\n                {selectedTodo.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${currentUser.email}`}>\n                {currentUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filtredByReady, setFiltredByReady] = useState(todos);\n  const [hasLoading, setHasIsLoading] = useState(true);\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n\n  const selectedTodo = todos.find(todo => todo.id === selectedTodoId);\n\n  const fetchTodos = async () => {\n    await getTodos().then((todosFromServer) => {\n      setTodos(todosFromServer);\n      setFiltredByReady(todosFromServer);\n    });\n    setHasIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const selectTodo = useCallback(\n    (todoId: number) => {\n      setSelectedTodoId(todoId);\n    },\n    [selectedTodoId],\n  );\n\n  const onFilter = (todosToFilter: Todo[]) => {\n    setFiltredByReady(todosToFilter);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onFilter={onFilter}\n                todos={todos}\n              />\n            </div>\n\n            <div className=\"block\">\n              {hasLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filtredByReady}\n                    selectTodo={selectTodo}\n                    selectedId={selectedTodoId}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          loadingState={hasLoading}\n          selectedTodo={selectedTodo}\n          onClose={selectTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}